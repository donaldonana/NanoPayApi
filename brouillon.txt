;platform_system == "Windows"

heroku pg:reset DATABASE
heroku run rake db:migrate 
heroku run rake db:seed --- heroku run rake db:setup
heroku run python manage.py migrate.
heroku run rake db:migrate --optional

python manage.py flush

git pull origin master
git add .
git commit -am "pre-heroku"
git push heroku master


A request body can only contain files when it has the multipart content type. You need to set the view parser_classes to (MultipartParser,) (no json).


629d19d41e1b32b68ecb76bf

DATABASE_URL

django.db.backends.









class UserProfileViewSet(viewsets.ModelViewSet):
    """Handle creating and updating user profile"""
    serializer_class = serializers.UserProfileSerializer
    queryset = models.UserProfile.objects.all()
    authentication_classes = (TokenAuthentication,)
    #permission_classes = (permissions.UpdateOwnProfile,)
    filter_backends = (filters.SearchFilter, DjangoFilterBackend, filters.OrderingFilter, )
    search_fields = ('nom', 'email','phone',)
    filter_fields = ('phone',)
    parser_classes = (MultiPartParser,FormParser) 


        
class UserList(generics.ListAPIView):
    serializer_class = serializers.UserProfileSerializer

    def get_queryset(self):
        """
        This view should return a list of all the purchases for
        the user as determined by the username portion of the URL.
        """
        phone = self.kwargs['telephone']
        return models.UserProfile.objects.filter(phone=phone)


class CompteViewSet(viewsets.ModelViewSet):
    """Handle creating and updating user profile"""
    serializer_class = serializers.CompteSerializer2
    queryset = Compte.objects.all()
    authentication_classes = (TokenAuthentication,)
    permission_classes = (
        IsAuthenticatedOrReadOnly,
    )
    filter_backends = [DjangoFilterBackend, filters.SearchFilter, filters.OrderingFilter]
    search_fields = ('solde', 'type','numCompte',)
    filterset_fields = ('user__nom',)
    ordering_fields = ('solde', 'id',)
    parser_classes = (MultiPartParser,FormParser)
    
    def perform_create(self, serializer):
        """Sets the user profile to the logged in user"""

        serializer.save(user=self.request.user)
        
    
        
# class ParametreCarteViewSet(viewsets.ModelViewSet):
#     """Handle creating and updating user profile"""
#     serializer_class = Comptes.serializers.ParametreCarteSerializer()
#     queryset = models.ParametreCarte.objects.all()
#     authentication_classes = (TokenAuthentication,)
    
#     parser_classes = (MultiPartParser,FormParser)

postgres://ihteernthmihzn:fbbb2bade5dfb5bab5d31f44e1f1aacd5818372a6ba8d41714726bc5a658523d@ec2-34-231-183-74.compute-1.amazonaws.com:5432/d7rs62te1d85ls